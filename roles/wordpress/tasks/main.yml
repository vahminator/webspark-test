---
- name: Create webroot
  file:
    state: directory
    path: /srv/www/
    owner: root
    group: root
    mode: 0755
  become: yes

- name: Check if WordPress directory exists in /srv/www
  stat: path=/srv/www/{{server_hostname}}
  register: check_path

- name: Download WordPress
  get_url: 
    url: https://ru.wordpress.org/latest-{{ wp_character }}.tar.gz 
    dest: /tmp/latest-{{ wp_character }}.tar.gz 
    checksum: "sha1:{{ wp_sha1sum }}" 
  become: yes
  when: not check_path.stat.exists

- name: Extract WordPress
  unarchive:
    src: /tmp/latest-{{ wp_character }}.tar.gz
    dest: /tmp
    owner: www-data
    group: www-data
    copy: no
  become: yes
  when: not check_path.stat.exists

- name: Move WordPress install files
  command: mv /tmp/wordpress /srv/www/{{server_hostname}}
  become: yes
  when: not check_path.stat.exists

- name: Fetch random salts for WordPress config
  local_action: command curl https://api.wordpress.org/secret-key/1.1/salt/
  register: "wp_salt"
  become: no

- name: Add wp-config
  template: "src=wp-config.php dest=/srv/www/{{server_hostname}}/wp-config.php"
  become: yes

- name: Update WordPress config file
  lineinfile:
    dest: "/srv/www/{{server_hostname}}/wp-config.php"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - {'regexp': "define\\('DB_NAME', '(.)+'\\);", 'line': "define('DB_NAME', '{{wp_db_name}}');"}
    - {'regexp': "define\\('DB_USER', '(.)+'\\);", 'line': "define('DB_USER', '{{wp_db_user}}');"}
    - {'regexp': "define\\('DB_PASSWORD', '(.)+'\\);", 'line': "define('DB_PASSWORD', '{{wp_db_password}}');"}
  become: yes

- name: Download wp-cli.phar
  get_url:
    url: https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
    dest: "/srv/www/{{server_hostname}}/"
    mode: 0777
    owner: www-data
    group: www-data

- name: Create WP user
  shell: /srv/www/{{server_hostname}}/wp-cli.phar user create {{ item.name }} {{ item.email }} --user_pass={{ item.password }} --role={{ item.role }} --path=/srv/www/{{server_hostname}}/ --allow-root
  with_items: "{{users}}"